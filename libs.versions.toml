#### 定义项目所有依赖库
## 统一定义版本
[versions]
projectjdk  = "21"
springboot = "3.5.3"
spring-cloud = "2025.0.0"
spring-cloud-alibaba = "2023.0.3.3"
lombok_version  = "1.18.38"
spring_dependency = "1.1.7"
jackson_version = "2.16.0"
mysql_connector_java_version = "8.0.33"
mybatis-plus-version = "3.5.12"
druid-version = "1.2.25"
commons-lang3-version = "3.18.0"
commons-io-version = "2.19.0"
springdoc-version = "2.8.9"
swagger-annotations-version = "2.2.34"
freemarker-version = "2.3.32"
velocity-engine-core-version = "2.4.1"
fastjson-version = "2.0.57"
sa-token-version = "1.38.0"
guava-version = "33.4.8-jre"
hutool-version = "5.8.39"
commons-pool2-version = "2.12.1"
aliyun-dysmsapi-version = "4.1.2"
jasypt-version = "3.0.5"
nacos-config-version = "2023.0.3.3"
spring-bootstrap-version = "4.3.0"
nacos-discovery-version = "2023.0.3.3"
transmittable-thread-local-version = "2.14.5"
minio-version = "8.5.17"
aliyun-oss-version = "3.17.4"
jaxb-api-version = "2.3.1"
activation-version = "1.1.1"
jaxb-runtime-version = "2.3.3"
feign-form-version = "3.8.0"
perf4j-version = "0.9.16"
curator-recipes-version = "2.6.0"
zookeeper-version = "3.9.4"
caffeine-version = "3.1.8"
rocketmq-version = "2.3.4"

## 统一定义依赖
[libraries]
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springboot" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-cloud-alibaba-dependencies = { module = "com.alibaba.cloud:spring-cloud-alibaba-dependencies", version.ref = "spring-cloud-alibaba" }
lombok = { module = "org.projectlombok:lombok", name="lombok", version.ref = "lombok_version" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", name="jackson-databind", version.ref = "jackson_version" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", name="jackson-core", version.ref = "jackson_version" }
mysql-connector-java = { module = "mysql:mysql-connector-java", name="mysql-connector-java", version.ref = "mysql_connector_java_version" }
mybatis-plus-boot-starter = { module = "com.baomidou:mybatis-plus-spring-boot3-starter", name="mybatis-plus-boot-starter", version.ref = "mybatis-plus-version" }
mybatis-plus-generator = { module = "com.baomidou:mybatis-plus-generator", name="mybatis-plus-generator", version.ref = "mybatis-plus-version" }
druid-spring-boot-starter = { module = "com.alibaba:druid-spring-boot-3-starter", name="druid-spring-boot-starter", version.ref = "druid-version" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", name="commons-lang3", version.ref = "commons-lang3-version" }
commons-io = { module = "commons-io:commons-io", name="commons-io", version.ref = "commons-io-version" }
springdoc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", name="springdoc", version.ref = "springdoc-version" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", name="swagger-annotations", version.ref = "swagger-annotations-version" }
#freemarker = { module = "org.freemarker:freemarker", name="freemarker", version.ref = "freemarker-version" }
freemarker = { module = "org.springframework.boot:spring-boot-starter-freemarker", name="spring-boot-starter-freemarke", version.ref = "springboot" }
velocity-engine-core = { module = "org.apache.velocity:velocity-engine-core", name="velocity-engine-core", version.ref = "velocity-engine-core-version" }
fastjson = { module = "com.alibaba:fastjson", name="fastjson", version.ref = "fastjson-version" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", name="jakarta.validation-api" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", name="hibernate-validator" }
sa-token = { module = "cn.dev33:sa-token-spring-boot3-starter", name="sa-token-spring-boot3-starter", version.ref = "sa-token-version" }
spring-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", name="spring-boot-starter-data-redis" }
commons-pool2 = { module = "org.apache.commons:commons-pool2", name="commons-pool2", version.ref = "commons-pool2-version" }
guava = { module = "com.google.guava:guava", name="guava", version.ref = "guava-version" }
hutool-all = { module = "cn.hutool:hutool-all", name="hutool-all", version.ref = "hutool-version" }
aliyun-dysmsapi = { module = "com.aliyun:dysmsapi20170525", name="dysmsapi20170525", version.ref = "aliyun-dysmsapi-version" }
sa-token-redis-jackson = { module = "cn.dev33:sa-token-redis-jackson", name="sa-token-redis-jackson", version.ref = "sa-token-version" }
jasypt = { module = "com.github.ulisesbocchio:jasypt-spring-boot-starter", name="jasypt-spring-boot-starter", version.ref = "jasypt-version" }
#nacos-config = { module = "com.alibaba.cloud:spring-alibaba-nacos-config", name="spring-alibaba-nacos-config", version.ref = "nacos-config-version" }
nacos-cloud-config = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config", name="spring-cloud-starter-alibaba-nacos-config", version.ref = "nacos-config-version" }
nacos-discovery = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery", name="spring-cloud-starter-alibaba-nacos-discovery", version.ref = "nacos-discovery-version" }
spring-bootstrap-starter = { module = "org.springframework.cloud:spring-cloud-starter-bootstrap", name="spring-cloud-starter-bootstrap", version.ref = "spring-bootstrap-version" }
spring-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway", name="spring-cloud-starter-gateway" }
spring-loadbalancer = { module = "org.springframework.cloud:spring-cloud-starter-loadbalancer", name="spring-cloud-starter-loadbalancer" }
sa-token-starter = { module = "cn.dev33:sa-token-reactor-spring-boot3-starter", name="sa-token-reactor-spring-boot3-starter", version.ref = "sa-token-version" }
transmittable-thread-local = { module = "com.alibaba:transmittable-thread-local", name="transmittable-thread-local", version.ref = "transmittable-thread-local-version" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", name="spring-boot-starter" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", name="jakarta.servlet-api" }
spring-web= { module = "org.springframework.boot:spring-boot-starter-web", name="spring-boot-starter-web" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", name="spring-boot-starter-test" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", name="junit-platform-launcher" }
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", name="spring-security-crypto" }
minio = { module = "io.minio:minio", name="minio", version.ref = "minio-version" }
aliyun-oss-sdk = { module = "com.aliyun.oss:aliyun-sdk-oss", name="aliyun-sdk-oss", version.ref = "aliyun-oss-version" }
jaxb-api = { module = "javax.xml.bind:jaxb-api", name="jaxb-api", version.ref = "jaxb-api-version" }
activation = { module = "javax.activation:activation", name="activation", version.ref = "activation-version" }
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", name="jaxb-runtime", version.ref = "jaxb-runtime-version" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", name="spring-boot-autoconfigure" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", name="jackson-datatype-jsr310" }
spring-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", name="spring-cloud-starter-openfeign" }
feign-form = { module = "io.github.openfeign.form:feign-form", name="feign-form", version.ref = "feign-form-version" }
feign-form-spring = { module = "io.github.openfeign.form:feign-form-spring", name="feign-form-spring", version.ref = "feign-form-version" }
feign-core = { module = "io.github.openfeign:feign-core", name="feign-core" }
spring-cassandra = { module = "org.springframework.boot:spring-boot-starter-data-cassandra", name="spring-boot-starter-data-cassandra" }
perf4j = { module = "org.perf4j:perf4j", name = "perf4j", version.ref = "perf4j-version" }
curator-recipes = { module = "org.apache.curator:curator-recipes", name = "curator-recipes", version.ref = "curator-recipes-version" }
druid = { module = "com.alibaba:druid", name = "druid", version.ref = "druid-version" }
zookeeper = { module = "org.apache.zookeeper:zookeeper", name = "zookeeper", version.ref = "zookeeper-version" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", name = "caffeine", version.ref = "caffeine-version"}
rocketmq = { module = "org.apache.rocketmq:rocketmq-spring-boot-starter", name = "rocketmq-spring-boot-starter", version.ref = "rocketmq-version" }


## 将多个需要同时引入的依赖定义成一个组，使用时直接引入组
[bundles]
## 统一定义插件
[plugins]
springboot = { id = "org.springframework.boot", version.ref = "springboot" }
springdependency = { id = "io.spring.dependency-management", version.ref = "spring_dependency" }
